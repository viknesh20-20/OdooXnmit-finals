{
  "name": "manufacturing-erp-backend",
  "version": "1.0.0",
  "description": "Production-ready Manufacturing ERP Backend with TypeScript, Clean Architecture, Express, and PostgreSQL",
  "main": "dist/server.js",
  "_moduleAliases": {
    "@": "dist",
    "@application": "dist/application",
    "@domain": "dist/domain",
    "@infrastructure": "dist/infrastructure",
    "@presentation": "dist/presentation"
  },
  "scripts": {
    "build": "tsc",
    "build:watch": "tsc --watch",
    "start": "node dist/server.js",
    "dev": "ts-node-dev --respawn --transpile-only --files src/server.ts",
    "start:simple": "node src/simple-server.js",
    "dev:simple": "ts-node-dev --respawn --transpile-only src/simple-server.ts",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:coverage": "jest --coverage",
    "test:unit": "jest --testPathPattern=unit",
    "test:integration": "jest --testPathPattern=integration",
    "db:migrate": "npx sequelize-cli db:migrate",
    "db:migrate:undo": "npx sequelize-cli db:migrate:undo",
    "db:seed": "npx sequelize-cli db:seed:all",
    "db:seed:undo": "npx sequelize-cli db:seed:undo:all",
    "db:reset": "npm run db:migrate:undo:all && npm run db:migrate && npm run db:seed",
    "lint": "eslint src/ --ext .ts",
    "lint:fix": "eslint src/ --ext .ts --fix",
    "type-check": "tsc --noEmit",
    "docker:build": "docker build -t manufacturing-erp .",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "docker:logs": "docker-compose logs -f"
  },
  "keywords": [
    "manufacturing",
    "erp",
    "nodejs",
    "express",
    "postgresql",
    "sequelize",
    "jwt",
    "production"
  ],
  "author": "Manufacturing ERP Team",
  "license": "MIT",
  "dependencies": {
    "bcrypt": "^5.1.1",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.0",
    "compression": "^1.7.4",
    "cookie-parser": "^1.4.7",
    "cors": "^2.8.5",
    "dotenv": "^16.3.1",
    "express": "^4.18.2",
    "express-rate-limit": "^7.1.5",
    "express-validator": "^7.0.1",
    "helmet": "^7.1.0",
    "inversify": "^6.0.2",
    "joi": "^17.11.0",
    "jsonwebtoken": "^9.0.2",
    "module-alias": "^2.2.3",
    "morgan": "^1.10.0",
    "multer": "^1.4.5-lts.1",
    "nodemailer": "^6.9.7",
    "pg": "^8.11.3",
    "pg-hstore": "^2.3.4",
    "reflect-metadata": "^0.2.2",
    "sequelize": "^6.35.2",
    "sequelize-typescript": "^2.1.6",
    "sqlite3": "^5.1.7",
    "uuid": "^9.0.1",
    "winston": "^3.17.0",
    "winston-daily-rotate-file": "^4.7.1"
  },
  "devDependencies": {
    "@types/bcrypt": "^5.0.2",
    "@types/compression": "^1.7.5",
    "@types/cookie-parser": "^1.4.9",
    "@types/cors": "^2.8.17",
    "@types/express": "^4.17.21",
    "@types/jest": "^29.5.8",
    "@types/jsonwebtoken": "^9.0.5",
    "@types/morgan": "^1.9.9",
    "@types/multer": "^1.4.11",
    "@types/node": "^20.10.0",
    "@types/nodemailer": "^6.4.14",
    "@types/supertest": "^2.0.16",
    "@types/uuid": "^9.0.7",
    "@typescript-eslint/eslint-plugin": "^6.13.1",
    "@typescript-eslint/parser": "^6.13.1",
    "eslint": "^8.55.0",
    "eslint-config-airbnb-typescript": "^17.1.0",
    "eslint-plugin-import": "^2.29.0",
    "jest": "^29.7.0",
    "sequelize-cli": "^6.6.2",
    "supertest": "^6.3.3",
    "ts-jest": "^29.1.1",
    "ts-node": "^10.9.2",
    "ts-node-dev": "^2.0.0",
    "typescript": "^5.3.2"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "jest": {
    "preset": "ts-jest",
    "testEnvironment": "node",
    "collectCoverageFrom": [
      "src/**/*.ts",
      "!src/migrations/**",
      "!src/seeders/**",
      "!src/**/*.d.ts",
      "!src/**/index.ts"
    ],
    "coverageDirectory": "coverage",
    "coverageReporters": [
      "text",
      "lcov",
      "html"
    ],
    "testMatch": [
      "**/__tests__/**/*.ts",
      "**/?(*.)+(spec|test).ts"
    ],
    "moduleNameMapping": {
      "^@/(.*)$": "<rootDir>/src/$1",
      "^@domain/(.*)$": "<rootDir>/src/domain/$1",
      "^@application/(.*)$": "<rootDir>/src/application/$1",
      "^@infrastructure/(.*)$": "<rootDir>/src/infrastructure/$1",
      "^@presentation/(.*)$": "<rootDir>/src/presentation/$1"
    }
  }
}
